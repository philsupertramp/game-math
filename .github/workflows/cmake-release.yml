name: CMake

on:
  push:
    branches: 
      - master

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - run:   |
          sudo apt update
          sudo apt install gcc-10 g++-10 libgraphicsmagick-dev
          sudo apt-get install build-essential checkinstall
          cd /opt
          sudo wget http://www.imagemagick.org/download/ImageMagick.tar.gz
          
          sudo tar xvzf ImageMagick.tar.gz
          cd ImageMagick-7.0.8-2
          sudo touch configure
          sudo ./configure
          sudo make
          sudo make install
          sudo ldconfig /usr/local/lib
          sudo make check
        shell: bash
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.7
        with:
          cmake-version: '3.19.x'

      - name: Use cmake
        run: cmake --version

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{runner.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DMATH_EXTENSIONS=numerics,ds -G "CodeBlocks - Unix Makefiles"
        env:
          CC: gcc-10
          CXX: g++-10

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config $BUILD_TYPE --target math-tests
        env:
          CC: gcc-10
          CXX: g++-10

      - name: Test
        working-directory: ${{runner.workspace}}/build/tests
        shell: bash
        run: ./math-tests
